name: Build Linux ArtifactBundle

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx (for multi-arch builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build both x86_64 and ARM64 binaries using Buildx
      - name: Build Swift static libs for Linux (x86_64 + ARM64)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t plaidapi-builder \
            -f Dockerfile \
            --output type=local,dest=./out \
            .

      # Combine outputs into a single .artifactbundle
      - name: Assemble PlaidAPI.artifactbundle
        run: |
          mkdir -p PlaidAPI.artifactbundle/linux-x86_64
          mkdir -p PlaidAPI.artifactbundle/linux-aarch64

          # Copy build outputs
          cp out/linux_amd64/.build/x86_64-unknown-linux-gnu/release/libPlaidAPILinux.a PlaidAPI.artifactbundle/linux-x86_64/ || true
          cp out/linux_arm64/.build/aarch64-unknown-linux-gnu/release/libPlaidAPILinux.a PlaidAPI.artifactbundle/linux-aarch64/ || true

          # Generate info.json
          cat > PlaidAPI.artifactbundle/info.json <<'JSON'
          {
            "schemaVersion": "1.0",
            "artifacts": {
              "PlaidAPILinux": {
                "type": "library",
                "version": "${{ github.ref_name }}",
                "variants": [
                  {
                    "path": "linux-x86_64",
                    "supportedTriples": ["x86_64-unknown-linux-gnu"]
                  },
                  {
                    "path": "linux-aarch64",
                    "supportedTriples": ["aarch64-unknown-linux-gnu"]
                  }
                ]
              }
            }
          }
          JSON

          # Zip the artifactbundle
          zip -r PlaidAPI.artifactbundle.zip PlaidAPI.artifactbundle

      # Compute SwiftPM checksum (useful for Package.swift binaryTarget)
      - name: Compute checksum
        id: checksum
        run: echo "checksum=$(swift package compute-checksum PlaidAPI.artifactbundle.zip)" >> $GITHUB_OUTPUT

      # Upload as build artifact (for inspection)
      - name: Upload PlaidAPI.artifactbundle.zip
        uses: actions/upload-artifact@v4
        with:
          name: PlaidAPI-Linux
          path: PlaidAPI.artifactbundle.zip

      # (Optional) Publish GitHub Release
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: PlaidAPI.artifactbundle.zip
          body: |
            Multi-architecture PlaidAPI artifact bundle for Linux

            SwiftPM binary target snippet:

            ```swift
            .binaryTarget(
                name: "PlaidAPILinux",
                url: "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/PlaidAPI.artifactbundle.zip",
                checksum: "${{ steps.checksum.outputs.checksum }}"
            )
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
